@model EntityModel.EF.GroupPath

@{
    ViewBag.Title = "Tạo nhóm mới";
    Layout = null;// "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="createModal" style="display: block !important;">
    <div class="modal-dialog modal-lg" style="overflow-y: initial !important;overflow-y: scroll; max-height:85%;  margin-top: 50px; margin-bottom:50px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">Tạo mới nhóm </h4>
            </div>
            @using (Html.BeginForm())
            {
                <div class="modal-body" style="height: 400px;overflow-y: auto;">
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-12">
                            <div class="col-md-7">
                                <div class="form-group">
                                    <label class="control-label col-md-3">Tên:</label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Nhập tên ở đây" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">ID Nhóm</label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(model => model.GroupID, new { @class = "form-control", placeholder = "Nhập ID nhóm ở đây" })
                                        @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">ID đường dẫn:</label>
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.PathID, new { @class = "form-control", placeholder = "Nhập ID đường dẫn ở đây" })
                                        @Html.ValidationMessageFor(model => model.PathID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    <div class="form-actions no-color text-center">
                        <input type="submit" value="Tạo mới" class="btn btn-success" />
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@*<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GroupPath</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupID, "GroupID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GroupID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PathID, "PathID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PathID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PathID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
